name: CI

on:
  workflow_dispatch:
  push:
    branches: [mozc]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    env:
      ABI: "armeabi-v7a,arm64-v8a,x86,x86_64"
      NDK_VERSION: "25.2.9519653"
      CMAKE_VERSION: "3.22.1"
      ANDROID_PLATFORM: "23"
      MOZC_SHA: ad0e97b8b8dcfd4c841a02c5d6a043fb5e741405

    steps:
      - name: Install build dependencies
        run: |
          pacman -Syu --needed --noconfirm \
            git unzip ghc cabal-install haskell-shake haskell-aeson-pretty \
            cmake extra-cmake-modules ninja fmt fcitx5 boost python opencc jre-openjdk gperf bazel

      - name: Fetch source code
        uses: actions/checkout@v4
        with:
          # this only sync submodules specified in .gitmodules,
          # because we don't want recursive submodules in glog, librime, etc.
          submodules: true

      - name: Fetch submodules
        run: |
          # it appears to be a bug when building in containers: https://github.com/actions/checkout/issues/915
          git config --global --add safe.directory '*'
          # fetch libime submodule kenlm since it's not in .gitmodules
          git submodule update --init --recursive libime

      - name: Fetch mozc
        uses: actions/checkout@v4
        with:
          submodules: recursive
          repository: google/mozc
          path: libmozc/mozc
          ref: ${{ env.MOZC_SHA }}

      - name: Setup Android NDK
        uses: android-actions/setup-android@v3
        with:
          packages: "ndk;${{ env.NDK_VERSION }} cmake;${{ env.CMAKE_VERSION }}"
          
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true

      - name: Build mozc_data.inc
        run: |
          git apply --directory=libmozc/mozc/src/third_party/protobuf libmozc/patches/protobuf.patch
          cd libmozc/mozc/src
          useradd -m builduser
          chown -R builduser:builduser .
          sudo -u builduser JAVA_HOME=/usr/lib/jvm/java-21-openjdk bazel build --config oss_linux --host_cxxopt=-Wno-uninitialized //data_manager/oss:mozc_data.inc

      - name: Build everything
        env:
          ANDROID_NDK_ROOT: ${{ env.ANDROID_HOME }}/ndk/${{ env.NDK_VERSION }}
        run: |
          # use archlinux's dynamic only ghc
          cabal configure --disable-library-vanilla --enable-shared --enable-executable-dynamic --ghc-options=-dynamic
          ./build-cabal -j libmozc

      - name: Pack prebuilt libraries
        run: |
          cd build
          mkdir prebuilt
          for TARGET in $(<artifacts.txt)
          do
            cp -a "$TARGET" prebuilt/
          done
          tar --zstd -cf prebuilt.tar.zst prebuilt/

      - name: Upload prebuilt to artifact
        uses: actions/upload-artifact@v4
        with:
          path: build/prebuilt.tar.zst
